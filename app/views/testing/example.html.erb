<%= javascript_include_tag "http://d3js.org/d3.v3.min.js", charset: "utf-8" %>

<head>
<%= csrf_meta_tag %>
<%= javascript_include_tag "jquery.contextmenu.js" %>
<%= stylesheet_link_tag "jquery.contextmenu.css" %>
<%= stylesheet_link_tag "application" %>
<%= stylesheet_link_tag "map.css" %>

<script type="text/javascript">
var right_x, right_y;
var map;
var point;


$( init );

function init() {

    // make items draggable
    var draggables = document.getElementsByClassName('draggable_class');
    for (var i = 0; i < draggables.length; ++i) {
        var item = draggables[i];  
        $(item).draggable( {
            containment: '#content',
            cursor: 'move',
            helper: 'clone',
            stop: function( event, ui ) {
                //$(this).after($(ui.helper).clone().draggable());
                var clone = $(ui.helper).clone(true).appendTo('body');
                clone.data( 'draggable', jQuery.extend(true, {}, $(ui.helper).data('draggable')) );
                //ui.helper.data( 'droppable', jQuery.extend(true, {}, clone.data('droppable')) );

            }
        });
        $(item).bind('dragstop', function(event, ui) {
            //var original = $(this);
            //var clone = original.clone().insertAfter(this);
            
        });
    }

    //make sliders
    $("#coal_slider").slider({
        min: 0,
        max: 100,
        slide: function() {

            recalculate();
        }
    });
    $("#wind_turbine_slider").slider({
        min: 0,
        max: 100,
        slide: function() {

            recalculate();
        }
    });
    $("#nuclear_slider").slider({
        min: 0,
        max: 100,
        slide: function() {

            recalculate();
        }
    });
    $("#insulation_slider").slider({
        min: 0,
        max: 100,
        slide: function() {

            recalculate();
        }
    });
    $("#vacuum_slider").slider({
        min: 0,
        max: 100,
        slide: function() {

            recalculate();
        }
    });

    recalculate();

    map = document.getElementById('mainspace');
    $(map).contextPopup({
        title: 'My Popup Menu',
        items: [
            { label:'Add Point',
                //icon:'icons/asdf.png',
                action:function() { 
                    //alert(right_x + ', ' + right_y);
                    $.ajax('/map_points/update', {
                        type: 'PUT',
                        data: { title: 'point', description: 'some random point', x: right_x, y: right_y },
                        //success: function() { .. },
                        //error: function() { .. }
                    });

                    point = $('<%= image_tag "/images/blue.png", class: "point", id: "point" %>').css({left:right_x + 'px', top:right_y + 'px'});
                    $(map).append(point);
                } },
            { label:'Another Thing',
                action:function() { alert('clicked 2') } },
            /* null can be used to add a separator to the menu items */
            null,
            { label:'Something',
                action:function() { alert('clicked 3') } }
        ]
    });

    $(map).mousedown(function(e){ 
    if( e.button == 2 ) { 
        var offset_t = $(this).offset().top - $(window).scrollTop();
        var offset_l = $(this).offset().left - $(window).scrollLeft();
        right_x = Math.round( (e.clientX - offset_l) );
        right_y = Math.round( (e.clientY - offset_t) );
        return false; 
    } 
    return true; 
    });

    // get auth token
    $.ajaxSetup({
        headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
    }

});
}

// just testing again .......
jQuery(document).ready(function () { 
    var map = $('#nz_map');
    var x = 562;
    var y = 246;

    <% @points.each do |point| %>
        x = <%= point.x %> - 10;
        y = <%= point.y %> - 10;
        point = $('<%= image_tag "/images/blue.png", class: "point", id: "point" %>').css({left:x + 'px', top:y + 'px'});
        map.append(point);
    <% end %>
});


//Level values
var baseSupply = 50;
var baseDemand = 75;
var baseEmissions = 50.0;

//recalculate the levels (for demoing)
function recalculate() {

    //apply slider values
    var energySupply = baseSupply +
        Math.floor($("#coal_slider").slider("value") / 2.0) +
        Math.floor($("#wind_turbine_slider").slider("value") / 6.0) +
        Math.floor($("#nuclear_slider").slider("value"));
    var energyDemand = baseDemand -
        Math.floor($("#insulation_slider").slider("value") / 5.0) +
        Math.floor($("#vacuum_slider").slider("value") / 3.2);
    var carbonEmissions = baseEmissions +
         Math.floor($("#coal_slider").slider("value") / 1.5) -
         Math.floor($("#vacuum_slider").slider("value") / 2.0);

    //change text
    document.getElementById("supply_bar").innerHTML = "Energy Supply: " +
        (energySupply * 10) + " TWh/yr";
    document.getElementById("demand_bar").innerHTML = "Energy Demand: " +
        (energyDemand * 10) + " TWh/yr";
    document.getElementById("carbon_emission").innerHTML = "Carbon Emissions: " +
        (carbonEmissions * 7) + " MtCO2e/yr";

     //update graph and simulation
    var supplyPercent = 40 - Math.floor(energySupply / 2.5) + 5;
    $("#supply_bar").css("margin-top", supplyPercent.toString() + "%");
    var demandPercent = 40 - Math.floor(energyDemand / 2.5) + 5;
    $("#demand_bar").css("margin-top", demandPercent.toString() + "%");
    var emisionsOpacity = carbonEmissions / 100.0;
    $("#clouds").css({opacity: emisionsOpacity});

    //change the reaction
    if (energySupply >= energyDemand && carbonEmissions < 60 &&
        Math.floor($("#nuclear_slider").slider("value")) < 50) {

        //document.getElementById("face").innerHTML = ":)";
        document.getElementById("face").src="../images/happy.png";
    }
    else {

        //document.getElementById("face").innerHTML = ":(";
        document.getElementById("face").src="../images/sad.png";
    }

    //change what people are saying
    if (energySupply < energyDemand / 2) {

        document.getElementById("comment_1").innerHTML =
            "\'My husband who was in a coma died when his life " +
            "support ran out of power\'";
    }
    else if (energySupply < energyDemand / 1.7) {

        document.getElementById("comment_1").innerHTML =
            "\'My kitchen has a layer of ice on the floor since " + 
            "I can\'t turn my heater on.\'";
    }
    else if (energySupply < energyDemand / 1.3) {

        document.getElementById("comment_1").innerHTML =
            "\'My t.v. has no power\'";
    }
    else if (energySupply < energyDemand) {

        document.getElementById("comment_1").innerHTML =
            "\'There\'s not enough power for my private render farm\'";
    }
    else if (energySupply > energyDemand * 1.5) {

        document.getElementById("comment_1").innerHTML =
        "\'SOOO MUCH POWER!\'";
    }
    else {

        document.getElementById("comment_1").innerHTML =
            "\'The level of power is sufficient\'";
    }

    if (carbonEmissions < 20) {

        document.getElementById("comment_2").innerHTML =
            "\'The air is so pure I'm aging backwards\'";
    }
    else if (carbonEmissions < 40) {

        document.getElementById("comment_2").innerHTML =
            "\'The air is so clean!\'";
    }
    else if (carbonEmissions < 60) {

        document.getElementById("comment_2").innerHTML =
            "\'cough cough\'";
    }
    else if (carbonEmissions < 80) {

        document.getElementById("comment_2").innerHTML =
            "\'I think I have the black lung\'";
    }
    else {

        document.getElementById("comment_2").innerHTML =
            "\'I lost my daughter in a cloud of carbon\'";
    }

    if (Math.floor($("#nuclear_slider").slider("value")) < 10) {

        document.getElementById("comment_3").innerHTML =
            "\'I like turtles\'";
    }
    else if (Math.floor($("#nuclear_slider").slider("value")) < 50) {

        document.getElementById("comment_3").innerHTML =
            "\'Say no to nuclear power\'";
    }
    else {

        document.getElementById("comment_3").innerHTML =
            "\'I have acquired a third arm due to radiation poisoning\'";
    }
}

</script>

</head>

<body>

<div id="content">
    <div id="mainspace">

        <img id="nz_map" src="/images/nz_map.png", alt: "New Zealand map">
        <img id="clouds" src="/images/clouds.png", alt: "clouds">
        <div id="carbon_emission">Carbon Emissions:</div>
        <div id="graph_panel"></div>
        <div id="demand_bar">Energy Demand</div>
        <div id="supply_bar">Energy Supply</div>

        <div id="reaction_bar">

            <div id="reaction_title">Reactions</div>
            <img id="face" src="/images/sad.png" alt: "reaction">
            <div id="comment_title">Citizens are saying: </div>
            <div id="comment_1">'My t.v. has no power'</div>
            <div id="comment_2">'cough cough'</div>
            <div id="comment_3">'I like turtles'</div>
            </div>
        </div>
    </div>    
    <div id="sidebar">

        <div id="coal_slider_title">Coal Power Plants</div>
        <div id="coal_slider"></div>

        <div id="wind_turbine_slider_title">Wind Turbines</div>
        <div id="wind_turbine_slider"></div>

        <div id="nuclear_slider_title">Nuclear Power Plants</div>
        <div id="nuclear_slider"></div>

        <div id="insulation_slider_title">Home Insulation</div>
        <div id="insulation_slider"></div>

        <div id="vacuum_slider_title">
            Massive Vacuum Cleaners to Suck Carbon Out of the Air (lol)
        </div>
        <div id="vacuum_slider"></div>

        <!-- <table>
            <tr>
               <th>Name</th>
               <th>Item</th>
           </tr>
            <% @random.each do |something| %>
                <tr>
                    <td><%= something.name %></td>
                    <td><%= image_tag something.url, class: "draggable_class", id: something.name %></td>
                </tr>
            <% end %>
        </table> -->
    </div>
</div>

</body>

<script>

// var n = 4, // number of layers
//     m = 200, // number of samples per layer
//     stack = d3.layout.stack().offset("wiggle"),
//     layers0 = stack(d3.range(n).map(function() { return bumpLayer(m); })),
//     layers1 = stack(d3.range(n).map(function() { return bumpLayer(m); }));

// var width = 960,
//     height = 500;

// var x = d3.scale.linear()
//     .domain([0, m - 1])
//     .range([0, width]);

// var y = d3.scale.linear()
//     .domain([0, d3.max(layers0.concat(layers1), function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); })])
//     .range([height, 0]);

// var color = d3.scale.linear()
//     .range(["#aad", "#556"]);

// var area = d3.svg.area()
//     .x(function(d) { return x(d.x); })
//     .y0(function(d) { return y(d.y0); })
//     .y1(function(d) { return y(d.y0 + d.y); });

// var svg = d3.select("body").append("svg")
//     .attr("width", width)
//     .attr("height", height);

// svg.selectAll("path")
//     .data(layers0)
//   .enter().append("path")
//     .attr("d", area)
//     .style("fill", function() { return color(Math.random()); });

// function transition() {
//   d3.selectAll("path")
//       .data(function() {
//         var d = layers1;
//         layers1 = layers0;
//         return layers0 = d;
//       })
//     .transition()
//       .duration(2500)
//       .attr("d", area);
// }

// // Inspired by Lee Byron's test data generator.
// function bumpLayer(n) {

//   function bump(a) {
//     var x = 1 / (.1 + Math.random()),
//         y = 2 * Math.random() - .5,
//         z = 10 / (.1 + Math.random());
//     for (var i = 0; i < n; i++) {
//       var w = (i / n - y) * z;
//       a[i] += x * Math.exp(-w * w);
//     }
//   }

//   var a = [], i;
//   for (i = 0; i < n; ++i) a[i] = 0;
//   for (i = 0; i < 5; ++i) bump(a);
//   return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });
// }

</script>